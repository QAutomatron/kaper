buildscript {

    ext
            {
                kotlin_version = '1.3.41'
                threads = project.hasProperty('threads') ? project.getProperty('threads').toInteger() : 1
            }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

group = 'com.qautomatron'
version = '0.0.18'

apply plugin: 'kotlin'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile group: 'io.appium', name: 'java-client', version: '7.1.0'
    compile 'io.github.microutils:kotlin-logging:1.7.1'
    compile group: 'org.aeonbits.owner', name: 'owner', version: '1.0.10'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'
    compile group: 'org.testng', name: 'testng', version: '6.14.3'
    testCompile 'com.willowtreeapps.assertk:assertk:0.19'
}

bintray {
    user = BINTRAY_USER
    key = BINTRAY_KEY
    publications = ['mavenJava']

    pkg {

        repo = 'kaper'
        name = 'kaper'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/QAutomatron/kaper.git'

        version {
            name = project.version
            released = new Date()
            vcsTag = "v${project.version}"
        }
    }
}

task sourcesJar(type: Jar, dependsOn: project.classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.bintray.pkg.name
            from components.java

            artifact sourcesJar {
                classifier = 'sources'
            }
            artifact javadocJar {
                classifier = 'javadoc'
            }
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useTestNG() {

        listeners.add('com.qautomatron.kaper.core.listener.KListener')

        options {
            parallel = 'classes' //modes: methods, tests, classes or instances.
            threadCount = threads
        }

    }

    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
    }
}